#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BudgetCommerce.App_Start
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CommerceDB")]
	public partial class CommerceDataBase1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChecking(Checking instance);
    partial void UpdateChecking(Checking instance);
    partial void DeleteChecking(Checking instance);
    partial void InsertCreditCard(CreditCard instance);
    partial void UpdateCreditCard(CreditCard instance);
    partial void DeleteCreditCard(CreditCard instance);
    partial void InsertCustomerInfo(CustomerInfo instance);
    partial void UpdateCustomerInfo(CustomerInfo instance);
    partial void DeleteCustomerInfo(CustomerInfo instance);
    partial void InsertGoalType(GoalType instance);
    partial void UpdateGoalType(GoalType instance);
    partial void DeleteGoalType(GoalType instance);
    partial void InsertSaving(Saving instance);
    partial void UpdateSaving(Saving instance);
    partial void DeleteSaving(Saving instance);
    #endregion
		
		public CommerceDataBase1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CommerceDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CommerceDataBase1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommerceDataBase1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommerceDataBase1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommerceDataBase1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Checking> Checkings
		{
			get
			{
				return this.GetTable<Checking>();
			}
		}
		
		public System.Data.Linq.Table<CreditCard> CreditCards
		{
			get
			{
				return this.GetTable<CreditCard>();
			}
		}
		
		public System.Data.Linq.Table<CustomerInfo> CustomerInfos
		{
			get
			{
				return this.GetTable<CustomerInfo>();
			}
		}
		
		public System.Data.Linq.Table<GoalType> GoalTypes
		{
			get
			{
				return this.GetTable<GoalType>();
			}
		}
		
		public System.Data.Linq.Table<Saving> Savings
		{
			get
			{
				return this.GetTable<Saving>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Checking")]
	public partial class Checking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CheckingTableID;
		
		private string _CustomerID;
		
		private string _AccountNumber;
		
		private System.Nullable<System.DateTime> _ProcessDateTime;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CR_deposit__or_DR_withdrawl_;
		
		private EntityRef<CustomerInfo> _CustomerInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckingTableIDChanging(int value);
    partial void OnCheckingTableIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnProcessDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessDateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCR_deposit__or_DR_withdrawl_Changing(string value);
    partial void OnCR_deposit__or_DR_withdrawl_Changed();
    #endregion
		
		public Checking()
		{
			this._CustomerInfo = default(EntityRef<CustomerInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CheckingTableID
		{
			get
			{
				return this._CheckingTableID;
			}
			set
			{
				if ((this._CheckingTableID != value))
				{
					this.OnCheckingTableIDChanging(value);
					this.SendPropertyChanging();
					this._CheckingTableID = value;
					this.SendPropertyChanged("CheckingTableID");
					this.OnCheckingTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessDateTime
		{
			get
			{
				return this._ProcessDateTime;
			}
			set
			{
				if ((this._ProcessDateTime != value))
				{
					this.OnProcessDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessDateTime = value;
					this.SendPropertyChanged("ProcessDateTime");
					this.OnProcessDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CR(deposit) or DR(withdrawl)]", Storage="_CR_deposit__or_DR_withdrawl_", DbType="VarChar(50)")]
		public string CR_deposit__or_DR_withdrawl_
		{
			get
			{
				return this._CR_deposit__or_DR_withdrawl_;
			}
			set
			{
				if ((this._CR_deposit__or_DR_withdrawl_ != value))
				{
					this.OnCR_deposit__or_DR_withdrawl_Changing(value);
					this.SendPropertyChanging();
					this._CR_deposit__or_DR_withdrawl_ = value;
					this.SendPropertyChanged("CR_deposit__or_DR_withdrawl_");
					this.OnCR_deposit__or_DR_withdrawl_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_Checking", Storage="_CustomerInfo", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerInfo CustomerInfo
		{
			get
			{
				return this._CustomerInfo.Entity;
			}
			set
			{
				CustomerInfo previousValue = this._CustomerInfo.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfo.Entity = null;
						previousValue.Checkings.Remove(this);
					}
					this._CustomerInfo.Entity = value;
					if ((value != null))
					{
						value.Checkings.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("CustomerInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CreditCard")]
	public partial class CreditCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditCardTableID;
		
		private string _CustomerID;
		
		private string _AccountNumber;
		
		private System.Nullable<System.DateTime> _ProcessDateTime;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CR_deposit__or_DR_withdrawl_;
		
		private EntityRef<CustomerInfo> _CustomerInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditCardTableIDChanging(int value);
    partial void OnCreditCardTableIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnProcessDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessDateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCR_deposit__or_DR_withdrawl_Changing(string value);
    partial void OnCR_deposit__or_DR_withdrawl_Changed();
    #endregion
		
		public CreditCard()
		{
			this._CustomerInfo = default(EntityRef<CustomerInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CreditCardTableID
		{
			get
			{
				return this._CreditCardTableID;
			}
			set
			{
				if ((this._CreditCardTableID != value))
				{
					this.OnCreditCardTableIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardTableID = value;
					this.SendPropertyChanged("CreditCardTableID");
					this.OnCreditCardTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessDateTime
		{
			get
			{
				return this._ProcessDateTime;
			}
			set
			{
				if ((this._ProcessDateTime != value))
				{
					this.OnProcessDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessDateTime = value;
					this.SendPropertyChanged("ProcessDateTime");
					this.OnProcessDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CR(deposit) or DR(withdrawl)]", Storage="_CR_deposit__or_DR_withdrawl_", DbType="VarChar(50)")]
		public string CR_deposit__or_DR_withdrawl_
		{
			get
			{
				return this._CR_deposit__or_DR_withdrawl_;
			}
			set
			{
				if ((this._CR_deposit__or_DR_withdrawl_ != value))
				{
					this.OnCR_deposit__or_DR_withdrawl_Changing(value);
					this.SendPropertyChanging();
					this._CR_deposit__or_DR_withdrawl_ = value;
					this.SendPropertyChanged("CR_deposit__or_DR_withdrawl_");
					this.OnCR_deposit__or_DR_withdrawl_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_CreditCard", Storage="_CustomerInfo", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerInfo CustomerInfo
		{
			get
			{
				return this._CustomerInfo.Entity;
			}
			set
			{
				CustomerInfo previousValue = this._CustomerInfo.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfo.Entity = null;
						previousValue.CreditCards.Remove(this);
					}
					this._CustomerInfo.Entity = value;
					if ((value != null))
					{
						value.CreditCards.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("CustomerInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerInfo")]
	public partial class CustomerInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerTableID;
		
		private string _CustomerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MiddleInitial;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CheckingAccountNumber;
		
		private string _CreditCardAccountNumber;
		
		private string _SavingsAccountNumber;
		
		private string _HomeAddress;
		
		private string _PhoneNumber;
		
		private System.Nullable<decimal> _CheckingBalance;
		
		private System.Nullable<decimal> _SavingsBalance;
		
		private EntitySet<Checking> _Checkings;
		
		private EntitySet<CreditCard> _CreditCards;
		
		private EntitySet<GoalType> _GoalTypes;
		
		private EntitySet<Saving> _Savings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerTableIDChanging(int value);
    partial void OnCustomerTableIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleInitialChanging(string value);
    partial void OnMiddleInitialChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCheckingAccountNumberChanging(string value);
    partial void OnCheckingAccountNumberChanged();
    partial void OnCreditCardAccountNumberChanging(string value);
    partial void OnCreditCardAccountNumberChanged();
    partial void OnSavingsAccountNumberChanging(string value);
    partial void OnSavingsAccountNumberChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCheckingBalanceChanging(System.Nullable<decimal> value);
    partial void OnCheckingBalanceChanged();
    partial void OnSavingsBalanceChanging(System.Nullable<decimal> value);
    partial void OnSavingsBalanceChanged();
    #endregion
		
		public CustomerInfo()
		{
			this._Checkings = new EntitySet<Checking>(new Action<Checking>(this.attach_Checkings), new Action<Checking>(this.detach_Checkings));
			this._CreditCards = new EntitySet<CreditCard>(new Action<CreditCard>(this.attach_CreditCards), new Action<CreditCard>(this.detach_CreditCards));
			this._GoalTypes = new EntitySet<GoalType>(new Action<GoalType>(this.attach_GoalTypes), new Action<GoalType>(this.detach_GoalTypes));
			this._Savings = new EntitySet<Saving>(new Action<Saving>(this.attach_Savings), new Action<Saving>(this.detach_Savings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTableID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CustomerTableID
		{
			get
			{
				return this._CustomerTableID;
			}
			set
			{
				if ((this._CustomerTableID != value))
				{
					this.OnCustomerTableIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTableID = value;
					this.SendPropertyChanged("CustomerTableID");
					this.OnCustomerTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleInitial", DbType="VarChar(50)")]
		public string MiddleInitial
		{
			get
			{
				return this._MiddleInitial;
			}
			set
			{
				if ((this._MiddleInitial != value))
				{
					this.OnMiddleInitialChanging(value);
					this.SendPropertyChanging();
					this._MiddleInitial = value;
					this.SendPropertyChanged("MiddleInitial");
					this.OnMiddleInitialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingAccountNumber", DbType="VarChar(50)")]
		public string CheckingAccountNumber
		{
			get
			{
				return this._CheckingAccountNumber;
			}
			set
			{
				if ((this._CheckingAccountNumber != value))
				{
					this.OnCheckingAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckingAccountNumber = value;
					this.SendPropertyChanged("CheckingAccountNumber");
					this.OnCheckingAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardAccountNumber", DbType="VarChar(50)")]
		public string CreditCardAccountNumber
		{
			get
			{
				return this._CreditCardAccountNumber;
			}
			set
			{
				if ((this._CreditCardAccountNumber != value))
				{
					this.OnCreditCardAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._CreditCardAccountNumber = value;
					this.SendPropertyChanged("CreditCardAccountNumber");
					this.OnCreditCardAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsAccountNumber", DbType="VarChar(50)")]
		public string SavingsAccountNumber
		{
			get
			{
				return this._SavingsAccountNumber;
			}
			set
			{
				if ((this._SavingsAccountNumber != value))
				{
					this.OnSavingsAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._SavingsAccountNumber = value;
					this.SendPropertyChanged("SavingsAccountNumber");
					this.OnSavingsAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(50)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckingBalance", DbType="Money")]
		public System.Nullable<decimal> CheckingBalance
		{
			get
			{
				return this._CheckingBalance;
			}
			set
			{
				if ((this._CheckingBalance != value))
				{
					this.OnCheckingBalanceChanging(value);
					this.SendPropertyChanging();
					this._CheckingBalance = value;
					this.SendPropertyChanged("CheckingBalance");
					this.OnCheckingBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsBalance", DbType="Money")]
		public System.Nullable<decimal> SavingsBalance
		{
			get
			{
				return this._SavingsBalance;
			}
			set
			{
				if ((this._SavingsBalance != value))
				{
					this.OnSavingsBalanceChanging(value);
					this.SendPropertyChanging();
					this._SavingsBalance = value;
					this.SendPropertyChanged("SavingsBalance");
					this.OnSavingsBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_Checking", Storage="_Checkings", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Checking> Checkings
		{
			get
			{
				return this._Checkings;
			}
			set
			{
				this._Checkings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_CreditCard", Storage="_CreditCards", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<CreditCard> CreditCards
		{
			get
			{
				return this._CreditCards;
			}
			set
			{
				this._CreditCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_GoalType", Storage="_GoalTypes", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<GoalType> GoalTypes
		{
			get
			{
				return this._GoalTypes;
			}
			set
			{
				this._GoalTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_Saving", Storage="_Savings", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Saving> Savings
		{
			get
			{
				return this._Savings;
			}
			set
			{
				this._Savings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Checkings(Checking entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = this;
		}
		
		private void detach_Checkings(Checking entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = null;
		}
		
		private void attach_CreditCards(CreditCard entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = this;
		}
		
		private void detach_CreditCards(CreditCard entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = null;
		}
		
		private void attach_GoalTypes(GoalType entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = this;
		}
		
		private void detach_GoalTypes(GoalType entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = null;
		}
		
		private void attach_Savings(Saving entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = this;
		}
		
		private void detach_Savings(Saving entity)
		{
			this.SendPropertyChanging();
			entity.CustomerInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoalType")]
	public partial class GoalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoalTableID;
		
		private string _CustomerID;
		
		private string _GoalType1;
		
		private System.Nullable<System.DateTime> _StartDateTime;
		
		private System.Nullable<System.DateTime> _EndDateTime;
		
		private System.Nullable<decimal> _AmountEntered;
		
		private string _GoalAchieved;
		
		private string _TenPercentToGoal;
		
		private EntityRef<CustomerInfo> _CustomerInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoalTableIDChanging(int value);
    partial void OnGoalTableIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnGoalType1Changing(string value);
    partial void OnGoalType1Changed();
    partial void OnStartDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateTimeChanged();
    partial void OnAmountEnteredChanging(System.Nullable<decimal> value);
    partial void OnAmountEnteredChanged();
    partial void OnGoalAchievedChanging(string value);
    partial void OnGoalAchievedChanged();
    partial void OnTenPercentToGoalChanging(string value);
    partial void OnTenPercentToGoalChanged();
    #endregion
		
		public GoalType()
		{
			this._CustomerInfo = default(EntityRef<CustomerInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GoalTableID
		{
			get
			{
				return this._GoalTableID;
			}
			set
			{
				if ((this._GoalTableID != value))
				{
					this.OnGoalTableIDChanging(value);
					this.SendPropertyChanging();
					this._GoalTableID = value;
					this.SendPropertyChanged("GoalTableID");
					this.OnGoalTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GoalType", Storage="_GoalType1", DbType="VarChar(50)")]
		public string GoalType1
		{
			get
			{
				return this._GoalType1;
			}
			set
			{
				if ((this._GoalType1 != value))
				{
					this.OnGoalType1Changing(value);
					this.SendPropertyChanging();
					this._GoalType1 = value;
					this.SendPropertyChanged("GoalType1");
					this.OnGoalType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountEntered", DbType="Money")]
		public System.Nullable<decimal> AmountEntered
		{
			get
			{
				return this._AmountEntered;
			}
			set
			{
				if ((this._AmountEntered != value))
				{
					this.OnAmountEnteredChanging(value);
					this.SendPropertyChanging();
					this._AmountEntered = value;
					this.SendPropertyChanged("AmountEntered");
					this.OnAmountEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalAchieved", DbType="VarChar(50)")]
		public string GoalAchieved
		{
			get
			{
				return this._GoalAchieved;
			}
			set
			{
				if ((this._GoalAchieved != value))
				{
					this.OnGoalAchievedChanging(value);
					this.SendPropertyChanging();
					this._GoalAchieved = value;
					this.SendPropertyChanged("GoalAchieved");
					this.OnGoalAchievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPercentToGoal", DbType="VarChar(50)")]
		public string TenPercentToGoal
		{
			get
			{
				return this._TenPercentToGoal;
			}
			set
			{
				if ((this._TenPercentToGoal != value))
				{
					this.OnTenPercentToGoalChanging(value);
					this.SendPropertyChanging();
					this._TenPercentToGoal = value;
					this.SendPropertyChanged("TenPercentToGoal");
					this.OnTenPercentToGoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_GoalType", Storage="_CustomerInfo", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerInfo CustomerInfo
		{
			get
			{
				return this._CustomerInfo.Entity;
			}
			set
			{
				CustomerInfo previousValue = this._CustomerInfo.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfo.Entity = null;
						previousValue.GoalTypes.Remove(this);
					}
					this._CustomerInfo.Entity = value;
					if ((value != null))
					{
						value.GoalTypes.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("CustomerInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Savings")]
	public partial class Saving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SavingsTableID;
		
		private string _CustomerID;
		
		private string _AccountNumber;
		
		private System.Nullable<System.DateTime> _ProcessDateTime;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
		private string _CR_deposit__or_DR_withdrawl_;
		
		private EntityRef<CustomerInfo> _CustomerInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSavingsTableIDChanging(int value);
    partial void OnSavingsTableIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnProcessDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessDateTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnCR_deposit__or_DR_withdrawl_Changing(string value);
    partial void OnCR_deposit__or_DR_withdrawl_Changed();
    #endregion
		
		public Saving()
		{
			this._CustomerInfo = default(EntityRef<CustomerInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsTableID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SavingsTableID
		{
			get
			{
				return this._SavingsTableID;
			}
			set
			{
				if ((this._SavingsTableID != value))
				{
					this.OnSavingsTableIDChanging(value);
					this.SendPropertyChanging();
					this._SavingsTableID = value;
					this.SendPropertyChanged("SavingsTableID");
					this.OnSavingsTableIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="VarChar(50)")]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._CustomerInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessDateTime
		{
			get
			{
				return this._ProcessDateTime;
			}
			set
			{
				if ((this._ProcessDateTime != value))
				{
					this.OnProcessDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ProcessDateTime = value;
					this.SendPropertyChanged("ProcessDateTime");
					this.OnProcessDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CR(deposit) or DR(withdrawl)]", Storage="_CR_deposit__or_DR_withdrawl_", DbType="VarChar(50)")]
		public string CR_deposit__or_DR_withdrawl_
		{
			get
			{
				return this._CR_deposit__or_DR_withdrawl_;
			}
			set
			{
				if ((this._CR_deposit__or_DR_withdrawl_ != value))
				{
					this.OnCR_deposit__or_DR_withdrawl_Changing(value);
					this.SendPropertyChanging();
					this._CR_deposit__or_DR_withdrawl_ = value;
					this.SendPropertyChanged("CR_deposit__or_DR_withdrawl_");
					this.OnCR_deposit__or_DR_withdrawl_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerInfo_Saving", Storage="_CustomerInfo", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public CustomerInfo CustomerInfo
		{
			get
			{
				return this._CustomerInfo.Entity;
			}
			set
			{
				CustomerInfo previousValue = this._CustomerInfo.Entity;
				if (((previousValue != value) 
							|| (this._CustomerInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerInfo.Entity = null;
						previousValue.Savings.Remove(this);
					}
					this._CustomerInfo.Entity = value;
					if ((value != null))
					{
						value.Savings.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("CustomerInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
